#!/usr/bin/env bash

set -e
set -o nounset
set -o pipefail

#eval "$(run gateway.proto)"
function gateway.proto() {
  cat <<EOF
    rm -rf api/vendor/protoc-gen-openapiv2/options/*
    pushd /tmp || return 1
    clone git@github.com:grpc-ecosystem/grpc-gateway.git#v2.7.3
    popd || return 1
    popd || return 1
    find /tmp/grpc-gateway/protoc-gen-openapiv2/options \
      -maxdepth 1 \
      -name '*.proto' \
      -exec cp -f {} api/vendor/protoc-gen-openapiv2/options \;
    rm -rf /tmp/grpc-gateway
EOF
}

#eval "$(run google.proto)"
function google.proto() {
  cat <<EOF
    rm -rf api/vendor/google/protobuf/*
    pushd /tmp || return 1
    clone git@github.com:protocolbuffers/protobuf.git#v3.19.4
    popd || return 1
    popd || return 1
    find /tmp/protobuf/src/google/protobuf \
      -maxdepth 1 \
      -name '*.proto' \
      -exec cp -f {} api/vendor/google/protobuf \;
    rm -rf /tmp/protobuf
EOF
}

function test_example() {
  return 0
}

function tests() {
  for test in $(compgen -A function | grep 'test_'); do
    local result=()
    if $test >/dev/null 2>&1; then
      result+=(ok)
    else
      result+=(fail)
    fi
    result+=("${test}")
    result+=(todo:timer)
    echo "${result[@]}" | column -t
  done
}

function help() {
  echo "$0 <task> <args>"
  echo "Tasks:"
  compgen -A function | grep -v '^__' | sort | cat -n
}

__default() { help; }

"${@:-__default}"
