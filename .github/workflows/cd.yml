name: Continuous delivery

on:
  workflow_dispatch:
    inputs:
      reason:
        description: The reason for dispatching it manually.
        type: string
        default: manual healthcheck
        required: true

  push:
    tags: [ 'v*' ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Set up Go environment
        uses: actions/setup-go@v4
        with: { go-version: 1.20.x, cache-dependency-path: tools/go.sum, check-latest: true }

      - name: Run fast check and tests
        run: make fast-check test
      - name: Publish the release
        uses: goreleaser/goreleaser-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GORELEASER_TOKEN }}
        with:
          distribution: goreleaser
          version: latest
          args: release --clean

  notify:
    name: Notifying
    needs: [ release ]
    runs-on: ubuntu-latest
    if: failure() || success()

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: Define notification message
        id: message
        uses: ./.github/actions/notify

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        env:
          SLACK_COLOR: ${{ contains(needs.*.result, 'failure') && 'failure' || 'success' }}
          SLACK_FOOTER: made with ‚ù§Ô∏è for everyone by OctoLab
          SLACK_ICON: https://github.com/github.png?size=64
          SLACK_MESSAGE: ${{ steps.message.outputs.txt }}
          SLACK_TITLE: 'üöÄ ${{ github.repository }}: ${{ github.workflow }}'
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
